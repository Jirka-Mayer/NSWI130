{
  "id" : 1,
  "name" : "Name",
  "description" : "Description",
  "revision" : 0,
  "lastModifiedDate" : "2021-11-22T16:39:48Z",
  "lastModifiedAgent" : "structurizr-web/2527/diagram",
  "properties" : {
    "structurizr.dsl" : ""
  },
  "configuration" : { },
  "model" : {
    "people" : [ {
      "id" : "1",
      "tags" : "Element,Person",
      "name" : "Medical Staff",
      "relationships" : [ {
        "id" : "36",
        "tags" : "Relationship",
        "sourceId" : "1",
        "destinationId" : "4",
        "description" : "Uses PMC to manage patient health data and bed allocations"
      }, {
        "id" : "46",
        "tags" : "Relationship",
        "sourceId" : "1",
        "destinationId" : "22",
        "description" : "Uses"
      } ],
      "location" : "Unspecified"
    }, {
      "id" : "2",
      "tags" : "Element,Person",
      "name" : "Medical Support Staff",
      "relationships" : [ {
        "id" : "37",
        "tags" : "Relationship",
        "sourceId" : "2",
        "destinationId" : "4",
        "description" : "Uses PMC to register or replace medical device to hospital beds"
      }, {
        "id" : "44",
        "tags" : "Relationship",
        "sourceId" : "2",
        "destinationId" : "12",
        "description" : "Registers or replaces medical device"
      }, {
        "id" : "138",
        "tags" : "Relationship",
        "sourceId" : "2",
        "destinationId" : "3",
        "description" : "Installs device to hospital bed"
      } ],
      "location" : "Unspecified"
    } ],
    "softwareSystems" : [ {
      "id" : "33",
      "tags" : "Element,Software System",
      "name" : "Drug Monitoring (DM)",
      "description" : "Software System",
      "relationships" : [ {
        "id" : "52",
        "tags" : "Relationship",
        "sourceId" : "33",
        "destinationId" : "4",
        "description" : "Allocates drugs"
      }, {
        "id" : "51",
        "tags" : "Relationship",
        "sourceId" : "33",
        "destinationId" : "25",
        "description" : "Allocates drugs"
      } ],
      "location" : "Unspecified"
    }, {
      "id" : "4",
      "tags" : "Element,Software System",
      "name" : "Patient Monitoring and Control (PMC)",
      "relationships" : [ {
        "id" : "43",
        "tags" : "Relationship",
        "sourceId" : "4",
        "destinationId" : "2",
        "description" : "Reports device malfunctions"
      }, {
        "id" : "39",
        "tags" : "Relationship",
        "sourceId" : "4",
        "destinationId" : "35",
        "description" : "Uses OAuth to authorize medical and technical staff"
      }, {
        "id" : "38",
        "tags" : "Relationship",
        "sourceId" : "4",
        "destinationId" : "33",
        "description" : "Uses DM to monitor drug usage"
      }, {
        "id" : "41",
        "tags" : "Relationship",
        "sourceId" : "4",
        "destinationId" : "3",
        "description" : "Pulls medical data"
      }, {
        "id" : "60",
        "tags" : "Relationship",
        "sourceId" : "4",
        "destinationId" : "34",
        "description" : "Fetches patients data"
      } ],
      "location" : "Unspecified",
      "containers" : [ {
        "id" : "13",
        "tags" : "Element,Container",
        "name" : "Devices Data Storage",
        "description" : "Persists medical devices configurations",
        "group" : "Medical Devices Management",
        "technology" : "Relational DB"
      }, {
        "id" : "5",
        "tags" : "Element,Container",
        "name" : "Devices Web API",
        "description" : "Manages medical devices, resolves communication differences of devices as adapter",
        "relationships" : [ {
          "id" : "40",
          "tags" : "Relationship",
          "sourceId" : "5",
          "destinationId" : "3",
          "description" : "Pulls medical data"
        }, {
          "id" : "45",
          "tags" : "Relationship",
          "sourceId" : "5",
          "destinationId" : "35",
          "description" : "Authorizes medical support staff"
        }, {
          "id" : "55",
          "tags" : "Relationship",
          "sourceId" : "5",
          "destinationId" : "13",
          "description" : "Uses"
        }, {
          "id" : "48",
          "tags" : "Relationship",
          "sourceId" : "5",
          "destinationId" : "15",
          "description" : "Requests beds data from PMC, sends new device's allocation device to PMC"
        }, {
          "id" : "42",
          "tags" : "Relationship",
          "sourceId" : "5",
          "destinationId" : "2",
          "description" : "Reports device malfunctions"
        } ],
        "group" : "Medical Devices Management",
        "technology" : "Java Spring Boot",
        "components" : [ {
          "id" : "10",
          "tags" : "Element,Component",
          "name" : "Devices Notifications",
          "description" : "Sends e-mail / sms notification to users",
          "relationships" : [ {
            "id" : "92",
            "tags" : "Relationship",
            "sourceId" : "10",
            "destinationId" : "2",
            "description" : "Reports device's fault/failure to"
          } ],
          "size" : 0
        }, {
          "id" : "8",
          "tags" : "Element,Component",
          "name" : "Devices Management",
          "description" : "Implementation logic of devices application",
          "relationships" : [ {
            "id" : "85",
            "tags" : "Relationship",
            "sourceId" : "8",
            "destinationId" : "11",
            "description" : "Retrieves devices data using adapter"
          }, {
            "id" : "86",
            "tags" : "Relationship",
            "sourceId" : "8",
            "destinationId" : "10",
            "description" : "Reports device's fault/failure to external services"
          }, {
            "id" : "84",
            "tags" : "Relationship",
            "sourceId" : "8",
            "destinationId" : "9",
            "description" : "Stores devices data and metadata"
          } ],
          "size" : 0
        }, {
          "id" : "9",
          "tags" : "Element,Component",
          "name" : "Devices Persistence",
          "description" : "DB operations ORMs",
          "relationships" : [ {
            "id" : "91",
            "tags" : "Relationship",
            "sourceId" : "9",
            "destinationId" : "13",
            "description" : "Uses ORM to persist data"
          } ],
          "size" : 0
        }, {
          "id" : "11",
          "tags" : "Element,Component",
          "name" : "Devices Adapter",
          "description" : "Adapters for different APIs of devices",
          "relationships" : [ {
            "id" : "87",
            "tags" : "Relationship",
            "sourceId" : "11",
            "destinationId" : "3",
            "description" : "Makes call to unique API",
            "technology" : "Protocols depend on device spec"
          } ],
          "size" : 0
        }, {
          "id" : "6",
          "tags" : "Element,Component",
          "name" : "Devices Data Controller",
          "description" : "Endpoints to get device data",
          "relationships" : [ {
            "id" : "83",
            "tags" : "Relationship",
            "sourceId" : "6",
            "destinationId" : "8",
            "description" : "Gets devices data processed by application logic"
          } ],
          "size" : 0
        }, {
          "id" : "7",
          "tags" : "Element,Component",
          "name" : "Devices Registration Controller",
          "description" : "Endpoints to (de)register devices",
          "relationships" : [ {
            "id" : "88",
            "tags" : "Relationship",
            "sourceId" : "7",
            "destinationId" : "8",
            "description" : "(De)registers devices"
          } ],
          "size" : 0
        } ]
      }, {
        "id" : "12",
        "tags" : "Element,Container,webApp",
        "name" : "Devices Web App",
        "description" : "Provides UI to manage and allocate medical devices",
        "relationships" : [ {
          "id" : "90",
          "tags" : "Relationship",
          "sourceId" : "12",
          "destinationId" : "7",
          "description" : "Makes call to"
        }, {
          "id" : "89",
          "tags" : "Relationship",
          "sourceId" : "12",
          "destinationId" : "6",
          "description" : "Makes call to"
        }, {
          "id" : "57",
          "tags" : "Relationship",
          "sourceId" : "12",
          "destinationId" : "5",
          "description" : "Uses"
        } ],
        "group" : "Medical Devices Management",
        "technology" : "React TS"
      }, {
        "id" : "23",
        "tags" : "Element,Container",
        "name" : "PMC Data Storage",
        "description" : "Persists patient history, allocation of devices to beds, available beds configuration",
        "group" : "Patient Monitoring and Control",
        "technology" : "Relational DB"
      }, {
        "id" : "14",
        "tags" : "Element,Container",
        "name" : "Devices Data Secondary Storage",
        "description" : "Persists medical devices configurations",
        "group" : "Medical Devices Management",
        "technology" : "Relational DB"
      }, {
        "id" : "24",
        "tags" : "Element,Container",
        "name" : "PMC Data Secondary Storage",
        "description" : "Persists medical devices configurations",
        "group" : "Patient Monitoring and Control",
        "technology" : "Relational DB"
      }, {
        "id" : "15",
        "tags" : "Element,Container",
        "name" : "PMC Server",
        "description" : "Manages allocation of patients, gathering monitoring data and drugs usage",
        "relationships" : [ {
          "id" : "59",
          "tags" : "Relationship",
          "sourceId" : "15",
          "destinationId" : "34",
          "description" : "Fetches patients data"
        }, {
          "id" : "58",
          "tags" : "Relationship",
          "sourceId" : "15",
          "destinationId" : "25",
          "description" : "Request allocation of drugs to patient"
        }, {
          "id" : "47",
          "tags" : "Relationship",
          "sourceId" : "15",
          "destinationId" : "35",
          "description" : "Authorizes medical staff"
        }, {
          "id" : "49",
          "tags" : "Relationship",
          "sourceId" : "15",
          "destinationId" : "5",
          "description" : "Queries data from medical devices"
        }, {
          "id" : "54",
          "tags" : "Relationship",
          "sourceId" : "15",
          "destinationId" : "23",
          "description" : "Uses"
        }, {
          "id" : "67",
          "tags" : "Relationship",
          "sourceId" : "15",
          "destinationId" : "28",
          "description" : "Fetches data to persist from"
        }, {
          "id" : "82",
          "tags" : "Relationship",
          "sourceId" : "15",
          "destinationId" : "6",
          "description" : "Makes API calls to",
          "technology" : "JSON/HTTPS"
        } ],
        "group" : "Patient Monitoring and Control",
        "technology" : "Java Spring Boot",
        "components" : [ {
          "id" : "17",
          "tags" : "Element,Component",
          "name" : "New-patient detector",
          "description" : "implements the logic behind detecting new patients",
          "relationships" : [ {
            "id" : "62",
            "tags" : "Relationship",
            "sourceId" : "17",
            "destinationId" : "34",
            "description" : "Queries"
          } ],
          "size" : 0
        }, {
          "id" : "21",
          "tags" : "Element,Component",
          "name" : "Persistance Layer",
          "description" : "Provides data mapping (in the form of many ORM classes) to the storage",
          "relationships" : [ {
            "id" : "81",
            "tags" : "Relationship",
            "sourceId" : "21",
            "destinationId" : "23",
            "description" : "Reads data from, writes data to"
          } ],
          "size" : 0
        }, {
          "id" : "16",
          "tags" : "Element,Component",
          "name" : "Patient Location Controller",
          "description" : "implements the logic related to getting and setting the location of a patient",
          "relationships" : [ {
            "id" : "136",
            "tags" : "Relationship",
            "sourceId" : "16",
            "destinationId" : "18",
            "description" : "If an old patient was overwritten, trigger patient history persistance for overwritten patient"
          }, {
            "id" : "63",
            "tags" : "Relationship",
            "sourceId" : "16",
            "destinationId" : "17",
            "description" : "Querries for new patients"
          }, {
            "id" : "61",
            "tags" : "Relationship",
            "sourceId" : "16",
            "destinationId" : "21",
            "description" : "Uses to access patient location data"
          }, {
            "id" : "77",
            "tags" : "Relationship",
            "sourceId" : "16",
            "destinationId" : "35",
            "description" : "Uses to authorize requests"
          } ],
          "size" : 0
        }, {
          "id" : "19",
          "tags" : "Element,Component",
          "name" : "Drug Controller",
          "description" : "implements the logic related to getting patient's drug data",
          "relationships" : [ {
            "id" : "74",
            "tags" : "Relationship",
            "sourceId" : "19",
            "destinationId" : "35",
            "description" : "Uses to authorize requests"
          }, {
            "id" : "72",
            "tags" : "Relationship",
            "sourceId" : "19",
            "destinationId" : "25",
            "description" : "Uses to access patient-drug data"
          }, {
            "id" : "71",
            "tags" : "Relationship",
            "sourceId" : "19",
            "destinationId" : "28",
            "description" : "Uses to access patient-drug data"
          } ],
          "size" : 0
        }, {
          "id" : "20",
          "tags" : "Element,Component",
          "name" : "Patient Condition Controller",
          "description" : "implements the logic related to getting patient's current condition",
          "relationships" : [ {
            "id" : "137",
            "tags" : "Relationship",
            "sourceId" : "20",
            "destinationId" : "6",
            "description" : "Requests sensor data related to patient's bed"
          }, {
            "id" : "78",
            "tags" : "Relationship",
            "sourceId" : "20",
            "destinationId" : "5",
            "description" : "Queries sensor data from"
          }, {
            "id" : "75",
            "tags" : "Relationship",
            "sourceId" : "20",
            "destinationId" : "35",
            "description" : "Uses to authorize requests"
          }, {
            "id" : "79",
            "tags" : "Relationship",
            "sourceId" : "20",
            "destinationId" : "21",
            "description" : "Uses to persists/access sensor data (during a single hospitalization)"
          } ],
          "size" : 0
        }, {
          "id" : "18",
          "tags" : "Element,Component",
          "name" : "Patient History Controller",
          "description" : "implements the logic related to getting and persisting patient's history",
          "relationships" : [ {
            "id" : "80",
            "tags" : "Relationship",
            "sourceId" : "18",
            "destinationId" : "21",
            "description" : "Uses to persist data from",
            "technology" : "various ORMs related to controllers"
          }, {
            "id" : "65",
            "tags" : "Relationship",
            "sourceId" : "18",
            "destinationId" : "28",
            "description" : "Fetches data to persist from"
          }, {
            "id" : "76",
            "tags" : "Relationship",
            "sourceId" : "18",
            "destinationId" : "35",
            "description" : "Uses to authorize requests"
          }, {
            "id" : "69",
            "tags" : "Relationship",
            "sourceId" : "18",
            "destinationId" : "21",
            "description" : "Uses to access patient history data"
          }, {
            "id" : "66",
            "tags" : "Relationship",
            "sourceId" : "18",
            "destinationId" : "25",
            "description" : "Fetches data to persist from"
          } ],
          "size" : 0
        } ]
      }, {
        "id" : "32",
        "tags" : "Element,Container",
        "name" : "Drugs Usage Data Secondary Storage",
        "description" : "Stores available drugs allocation (balance)",
        "group" : "Drugs Usage",
        "technology" : "Relational DB"
      }, {
        "id" : "22",
        "tags" : "Element,Container,webApp",
        "name" : "PMC Web App",
        "description" : "Allows to manage patient' allocation, view monitoring data and set records of drug usage",
        "relationships" : [ {
          "id" : "73",
          "tags" : "Relationship",
          "sourceId" : "22",
          "destinationId" : "20",
          "description" : "Makes API calls to get patient's current condition",
          "technology" : "JSON/HTTP"
        }, {
          "id" : "68",
          "tags" : "Relationship",
          "sourceId" : "22",
          "destinationId" : "18",
          "description" : "Makes API calls to get patient history",
          "technology" : "JSON/HTTP"
        }, {
          "id" : "70",
          "tags" : "Relationship",
          "sourceId" : "22",
          "destinationId" : "19",
          "description" : "Makes API calls to get patient's drug usage data",
          "technology" : "JSON/HTTP"
        }, {
          "id" : "56",
          "tags" : "Relationship",
          "sourceId" : "22",
          "destinationId" : "15",
          "description" : "Uses"
        }, {
          "id" : "64",
          "tags" : "Relationship",
          "sourceId" : "22",
          "destinationId" : "16",
          "description" : "Makes API calls to get/assign patients' locations",
          "technology" : "JSON/HTTP"
        } ],
        "group" : "Patient Monitoring and Control",
        "technology" : "React TS"
      }, {
        "id" : "31",
        "tags" : "Element,Container",
        "name" : "Drugs Usage Data Storage",
        "description" : "Stores available drugs allocation (balance)",
        "group" : "Drugs Usage",
        "technology" : "Relational DB"
      }, {
        "id" : "25",
        "tags" : "Element,Container",
        "name" : "Drugs Usage Web API",
        "description" : "Allocates drugs and reports depletion of drugs",
        "relationships" : [ {
          "id" : "50",
          "tags" : "Relationship",
          "sourceId" : "25",
          "destinationId" : "33",
          "description" : "Reports drugs depletion"
        }, {
          "id" : "53",
          "tags" : "Relationship",
          "sourceId" : "25",
          "destinationId" : "31",
          "description" : "Uses"
        } ],
        "group" : "Drugs Usage",
        "technology" : "Java Spring Boot",
        "components" : [ {
          "id" : "28",
          "tags" : "Element,Component",
          "name" : "Drug Controller",
          "description" : "Endpoint for drug management and info",
          "relationships" : [ {
            "id" : "93",
            "tags" : "Relationship",
            "sourceId" : "28",
            "destinationId" : "27",
            "description" : "Relays queries about drug information"
          }, {
            "id" : "95",
            "tags" : "Relationship",
            "sourceId" : "28",
            "destinationId" : "29",
            "description" : "Relays info about drug prescriptions"
          } ],
          "size" : 0
        }, {
          "id" : "29",
          "tags" : "Element,Component",
          "name" : "Drug Management",
          "description" : "Manages drug needs",
          "relationships" : [ {
            "id" : "96",
            "tags" : "Relationship",
            "sourceId" : "29",
            "destinationId" : "30",
            "description" : "Stores drug prescriptions and local storage"
          }, {
            "id" : "98",
            "tags" : "Relationship",
            "sourceId" : "29",
            "destinationId" : "26",
            "description" : "Requests drug delivery"
          } ],
          "size" : 0
        }, {
          "id" : "30",
          "tags" : "Element,Component",
          "name" : "Persistance layer",
          "relationships" : [ {
            "id" : "97",
            "tags" : "Relationship",
            "sourceId" : "30",
            "destinationId" : "31",
            "description" : "Uses to persist data"
          } ],
          "size" : 0
        }, {
          "id" : "27",
          "tags" : "Element,Component",
          "name" : "Drug Catalog Manager",
          "description" : "Implements logic related to querying drug information",
          "relationships" : [ {
            "id" : "94",
            "tags" : "Relationship",
            "sourceId" : "27",
            "destinationId" : "33",
            "description" : "Makes API call to"
          } ],
          "size" : 0
        }, {
          "id" : "26",
          "tags" : "Element,Component",
          "name" : "Drug Delivery Manager",
          "description" : "Implements logic related to requesting drug delivery",
          "relationships" : [ {
            "id" : "99",
            "tags" : "Relationship",
            "sourceId" : "26",
            "destinationId" : "33",
            "description" : "Makes API call to"
          } ],
          "size" : 0
        } ]
      } ]
    }, {
      "id" : "35",
      "tags" : "Element,Software System",
      "name" : "OAuth Authorization Server",
      "description" : "Software System",
      "location" : "Unspecified"
    }, {
      "id" : "3",
      "tags" : "Element,Software System,Specific type of medical device containing health sensors",
      "name" : "Medical Device",
      "description" : "Hardware",
      "location" : "Unspecified"
    }, {
      "id" : "34",
      "tags" : "Element,Software System",
      "name" : "Patient registry",
      "description" : "Software System",
      "location" : "Unspecified"
    } ],
    "deploymentNodes" : [ {
      "id" : "100",
      "tags" : "Element,Deployment Node",
      "name" : "Technical User's Workstation",
      "environment" : "Production",
      "technology" : "Microsoft Windows 10",
      "instances" : 1,
      "children" : [ {
        "id" : "101",
        "tags" : "Element,Deployment Node",
        "name" : "Web Browser",
        "environment" : "Production",
        "technology" : "Chrome, Firefox, Safari, or Edge",
        "instances" : 1,
        "containerInstances" : [ {
          "id" : "102",
          "tags" : "Container Instance",
          "relationships" : [ {
            "id" : "115",
            "sourceId" : "102",
            "destinationId" : "114",
            "description" : "Uses",
            "linkedRelationshipId" : "57"
          } ],
          "environment" : "Production",
          "deploymentGroups" : [ "Default" ],
          "instanceId" : 1,
          "containerId" : "12"
        } ]
      } ]
    }, {
      "id" : "106",
      "tags" : "Element,Deployment Node",
      "name" : "On-premises Datacenter",
      "environment" : "Production",
      "instances" : 1,
      "children" : [ {
        "id" : "130",
        "tags" : "Element,Deployment Node,Failover",
        "name" : "med-db03.[base-intranet-url]",
        "environment" : "Production",
        "technology" : "Ubuntu 18.04 LTS",
        "instances" : 1,
        "children" : [ {
          "id" : "131",
          "tags" : "Element,Deployment Node,Failover",
          "name" : "Oracle - Secondary",
          "environment" : "Production",
          "technology" : "Oracle 19c",
          "instances" : 1,
          "containerInstances" : [ {
            "id" : "133",
            "tags" : "Container Instance",
            "environment" : "Production",
            "deploymentGroups" : [ "Default" ],
            "instanceId" : 1,
            "containerId" : "32"
          }, {
            "id" : "134",
            "tags" : "Container Instance",
            "environment" : "Production",
            "deploymentGroups" : [ "Default" ],
            "instanceId" : 1,
            "containerId" : "24"
          }, {
            "id" : "132",
            "tags" : "Container Instance",
            "environment" : "Production",
            "deploymentGroups" : [ "Default" ],
            "instanceId" : 1,
            "containerId" : "14"
          } ]
        } ]
      }, {
        "id" : "107",
        "tags" : "Element,Deployment Node",
        "name" : "k8-med-apps.[base-intranet-url]",
        "environment" : "Production",
        "technology" : "Ubuntu 18.04 LTS",
        "instances" : 1,
        "children" : [ {
          "id" : "112",
          "tags" : "Element,Deployment Node",
          "name" : "Container #2",
          "environment" : "Production",
          "technology" : "Docker",
          "instances" : 1,
          "children" : [ {
            "id" : "113",
            "tags" : "Element,Deployment Node",
            "name" : "devices.pmc.[base-intranet-url]",
            "environment" : "Production",
            "technology" : "Apache Tomcat 8.x",
            "instances" : 1,
            "containerInstances" : [ {
              "id" : "114",
              "tags" : "Container Instance",
              "relationships" : [ {
                "id" : "125",
                "sourceId" : "114",
                "destinationId" : "124",
                "description" : "Uses",
                "linkedRelationshipId" : "55"
              }, {
                "id" : "116",
                "sourceId" : "114",
                "destinationId" : "110",
                "description" : "Requests beds data from PMC, sends new device's allocation device to PMC",
                "linkedRelationshipId" : "48"
              } ],
              "environment" : "Production",
              "deploymentGroups" : [ "Default" ],
              "instanceId" : 1,
              "containerId" : "5"
            } ]
          } ]
        }, {
          "id" : "118",
          "tags" : "Element,Deployment Node",
          "name" : "Container #3",
          "environment" : "Production",
          "technology" : "Docker",
          "instances" : 1,
          "children" : [ {
            "id" : "119",
            "tags" : "Element,Deployment Node",
            "name" : "drug-usage.pmc.[base-intranet-url]",
            "environment" : "Production",
            "technology" : "Apache Tomcat 8.x",
            "instances" : 1,
            "containerInstances" : [ {
              "id" : "120",
              "tags" : "Container Instance",
              "relationships" : [ {
                "id" : "127",
                "sourceId" : "120",
                "destinationId" : "126",
                "description" : "Uses",
                "linkedRelationshipId" : "53"
              } ],
              "environment" : "Production",
              "deploymentGroups" : [ "Default" ],
              "instanceId" : 1,
              "containerId" : "25"
            } ]
          } ]
        }, {
          "id" : "108",
          "tags" : "Element,Deployment Node",
          "name" : "Container #1",
          "environment" : "Production",
          "technology" : "Docker",
          "instances" : 1,
          "children" : [ {
            "id" : "109",
            "tags" : "Element,Deployment Node",
            "name" : "app.pmc.[base-intranet-url]",
            "environment" : "Production",
            "technology" : "Apache Tomcat 8.x",
            "instances" : 1,
            "containerInstances" : [ {
              "id" : "110",
              "tags" : "Container Instance",
              "relationships" : [ {
                "id" : "121",
                "sourceId" : "110",
                "destinationId" : "120",
                "description" : "Request allocation of drugs to patient",
                "linkedRelationshipId" : "58"
              }, {
                "id" : "117",
                "sourceId" : "110",
                "destinationId" : "114",
                "description" : "Queries data from medical devices",
                "linkedRelationshipId" : "49"
              }, {
                "id" : "129",
                "sourceId" : "110",
                "destinationId" : "128",
                "description" : "Uses",
                "linkedRelationshipId" : "54"
              } ],
              "environment" : "Production",
              "deploymentGroups" : [ "Default" ],
              "instanceId" : 1,
              "containerId" : "15"
            } ]
          } ]
        } ]
      }, {
        "id" : "122",
        "tags" : "Element,Deployment Node",
        "name" : "med-db01.[base-intranet-url]",
        "environment" : "Production",
        "technology" : "Ubuntu 18.04 LTS",
        "instances" : 1,
        "children" : [ {
          "id" : "123",
          "tags" : "Element,Deployment Node",
          "name" : "Oracle - Primary",
          "relationships" : [ {
            "id" : "135",
            "tags" : "Relationship",
            "sourceId" : "123",
            "destinationId" : "131",
            "description" : "Replicates data to"
          } ],
          "environment" : "Production",
          "technology" : "Oracle 19c",
          "instances" : 1,
          "containerInstances" : [ {
            "id" : "126",
            "tags" : "Container Instance",
            "environment" : "Production",
            "deploymentGroups" : [ "Default" ],
            "instanceId" : 1,
            "containerId" : "31"
          }, {
            "id" : "128",
            "tags" : "Container Instance",
            "environment" : "Production",
            "deploymentGroups" : [ "Default" ],
            "instanceId" : 1,
            "containerId" : "23"
          }, {
            "id" : "124",
            "tags" : "Container Instance",
            "environment" : "Production",
            "deploymentGroups" : [ "Default" ],
            "instanceId" : 1,
            "containerId" : "13"
          } ]
        } ]
      } ]
    }, {
      "id" : "103",
      "tags" : "Element,Deployment Node",
      "name" : "Medical Staff's Workstation",
      "environment" : "Production",
      "technology" : "Microsoft Windows 10",
      "instances" : 1,
      "children" : [ {
        "id" : "104",
        "tags" : "Element,Deployment Node",
        "name" : "Web Browser",
        "environment" : "Production",
        "technology" : "Chrome, Firefox, Safari, or Edge",
        "instances" : 1,
        "containerInstances" : [ {
          "id" : "105",
          "tags" : "Container Instance",
          "relationships" : [ {
            "id" : "111",
            "sourceId" : "105",
            "destinationId" : "110",
            "description" : "Uses",
            "linkedRelationshipId" : "56"
          } ],
          "environment" : "Production",
          "deploymentGroups" : [ "Default" ],
          "instanceId" : 1,
          "containerId" : "22"
        } ]
      } ]
    } ]
  },
  "documentation" : {
    "sections" : [ {
      "elementId" : "4",
      "title" : "Development Documentation",
      "order" : 2,
      "format" : "Markdown",
      "content" : "\r\n## Development Documentation\r\n\r\nFollowing sections contains further technical details for each application in PMC software system.\r\n\r\n#### Note on terminology\r\nFor clarity, in the PMC Core Application Container, there are only **Controller components** which, however, encompass both public (pre-generated, Swagger-like) web API **and business logic**. In other components the Controller's role is to provide only the public API and redirect requests to business-logic-related components.\r\n\r\nIn the entirety of the documentation, whenever you see a **persistence layer**, keep in mind that this component includes both the collection of **data models** for individual business logic components and separated & flexible **means of communication with the underlying database** system. \r\n\r\n### PMC Core Application\r\n\r\nThe main purpose of the PMC Core Application is to bring the whole system together by connecting all the other parts and provide the system's services to users (except for the medical support staff, that should use the *Devices Application* instead). It also directly handles patients' history and the allocation of hospital beds.\r\n\r\n![](embed:Level_3_central)\r\n\r\nLooking at the diagram horizontally, you may see that the server is composed mainly of two different layers - *Controllers* and the *Persistence Layer*. The web application communicates with the controllers (their API), which contain the business logic and store or retrieve data through the persistence layer (see [Note on terminology](#1.2.1)).\r\n\r\nVertically though, the diagram is divided into four separate units, each handling a different set of tasks the PMC Server needs to carry out. These tasks are primarily the prescription of drugs, managing patients' history, the allocation of beds to patients and monitoring the patients' condition.\r\n\r\n#### New-patient detector\r\n\r\nIn order to notify users of the application (the medical personnel) that a new patient does not have a bed allocated to them, the list of new patients is needed. The *New-patient detector* component is used to obtain this list using the *Patient registry*. It expects that the *Patient registry* provides data that are sufficient to determine this information.\r\n\r\n#### Patient Condition Controller\r\n\r\nShort history records about a patient's condition (the results measured by devices at a particular bed) are stored within the *Devices Application*. The *Patient Condition Controller* fetches them periodically and ensures the data about the current hospitalization are available in the *Persistence Layer* of the *PMC Server*.\r\n\r\n#### Patient History Controller\r\n\r\nAll the other controllers in the *PMC Server* use models concerning the current hospitalization of patients. When a patient leaves the hospital, the *Patient History Controller* takes all the data collected during the hospitalization and stores them via the *Persistence Layer*.\r\n\r\n#### Related workflows\r\n\r\nIn this workflow, we provide a detailed look at how new patients are discovered and displayed to the user. [New-patient detector](#2.1.1) provides only a list of new patients. It is up to the Patient Location Controller to filter only those, who don't have a bed assigned yet and respond to the frontend's request with the correct list. \r\n\r\n![](embed:PatientDiscoveryWorkflow)\r\n\r\nIn this workflow, we provide a detailed look at how patients are assigned to a bed. Patient location controller verifies if such change can be done and writes the change via the persistence layer. In the case another patient (who has departed) already occupied the same bed as requested, that patient's data is requested to be moved to history data models via the patient history controller.\r\n\r\n![](embed:AddPatientWorkflow)\r\n\r\n\r\n### Devices Application\r\n\r\nDevices application handles management and communication with medical devices. Devices Web API makes requests to devices on behalf of another services. Devices Web App allows medical support staff to manage medical devices.\r\n\r\n![](embed:Level_3_devices)\r\n\r\n#### Devices Web App\r\n\r\nDevices Web App allows medical support staff to register, move and unregister devices to hospital beds. In case of a device malfunction, users can see latest communication with the device.\r\n\r\n#### Devices Web API\r\n\r\nDevices Web API solves problems regarding non-uniformity in communication with medical devices -- each device is possibly communicating via different communication protocol and provides data in different data formats. Consumers of Devices Web API uses REST/Json API which returns device data in unified device model, with provided schemas for each device type. Consumers can request data from all devices registered under bed which ID is provided in request.\r\n\r\nThe differences are internally managed by adapters registered for each device type. When API receives a request to pull data from device, the request is delegated to device's adapter which directly contacts the device and converts device's response to unified data model of device data. The model is then serialized to JSON available to consumers of the API. When system needs to communicate with new type of devices (e.g. new type of temperature sensors), new adapter needs to be developed.\r\n\r\n#### Managing Devices\r\n\r\nDevices Web API application handles most of the implementation logic in component Devices Management, containing core logic for devices management and communication. Each Spring Boot controller executes granular steps defined in this Devices Management controller. Metadata, such as device configuration and their allocations to beds, are stored in the persistent storage. The communication with persistent storage is managed by persistance layer, which contains definitions of ORM data model used by application's internal logic. Devices Management stores latest requests activity for diagnostics.\r\n\r\n#### Handling Device Malfunctions\r\n\r\nWhen adapter fails to communicate with device or device returns invalid state, Devices Management component receives error based on type of failure. Devices Management stores error in communication under latest requests for the device and contacts Devices Notifications component to inform users via email and notification is sent to Slack application.\r\n\r\n![](embed:DeviceFailureWorkflow)\r\n\r\n\r\n#### Related Workflows\r\n\r\nThis workflow describes how the real-time *patient's condition* is checked and communicated by and within the system. This diagram requires you to know the workings of the [PMC Core Application](#2.1), be sure to read through that section first. After the frontend's request, the PMC core application requests data from [Devices Web API](#2.2.2) which sees the request though and returns data in a unified format as described in [it's documentation section and the following sections.](#2.2.2) \r\n\r\n![](embed:PatientConditionCheckWorkflow)\r\n\r\n### Drugs Application\r\n\r\nTakes care of all drug related problems and communications with *Drug Monitoring*.\r\n\r\nAll actions are taken as responses to requests from *PMC Server*, there is no active local loop.\r\n\r\nPossible requests from *PMC Server* are:\r\n- drug information query from drug catalog\r\n- change of patient's prescriptions\r\n- notification of used drugs\r\n\r\n![](embed:Level_3_drugs)\r\n\r\n#### Drug Controller\r\n\r\nInterface to be accessed by *PMC Server*, simply relays requests translated into local format of *Drug Application*.\r\n\r\n#### Drug Delivery Manager\r\n\r\nInterface accessing *Drug Monitoring* to request delivery of needed drugs and to report consumed drug packages.\r\n\r\n#### Drug Catalog Manager\r\n\r\nQueries drug information from *Drug Monitoring*. It is separated from core of *Drugs Application*, because this feature is completely orthogonal. Rest of *Drug Application* can work purely with drug ID and *Catalog Manager* does not need any drug storage or prescription information or any kind of local persistent storage. Furthermore, conceptually it is not even necessary to use *Drug Monitoring* and rather directly access some kind of national drug catalog.\r\n\r\n#### Drug Management\r\n\r\nMain logic of *Drugs Application*, handles patients' prescriptions and local drug storage. Based on those it communicates through *Drug Delivery Management* to request reasonable amount of drugs for near future.\r\n\r\n#### Related Workflows\r\n\r\nThe following workflow diagram elaborates on how drugs are prescribed to a patient. You can read about the [simplified version](#1.4.2) in a previous section. Notice that drug prescriptions are stored within the [Drugs Application](#2.3) and a request of a new delivery may be sent to the *Drug Monitoring* system in case the prescribed drugs are not available.\r\n\r\n![](embed:DrugsManagementWorkflow)\r\n\r\n### Deployment\r\n\r\nTo comply with safety requirements, deployments are being accessible only in hospital intranet (in diagrams denoted as base-intranet-url). As a microservices architecture, each application in PMC software system is deployed independently on another application as a single service.\r\n\r\n#### Application deployment\r\n\r\nApplications are managed by Kubernetes in k8-med-apps instance, each application running in own docker container. Applications scaling can be allowed by requesting DevOps managing k8-med-apps server. Users access Devices application under devices.pmc and PMC application under app.pmc in hospital's intranet.\r\n\r\n#### Storage deployment\r\n\r\nEach application uses its own database in Primary Oracle instance on med-db01 database server. To comply with regulations, storage is replicated to secondary storage on med-db03 database server.\r\n\r\n![](embed:Prod)\r\n"
    }, {
      "elementId" : "4",
      "title" : "Project Description",
      "order" : 1,
      "format" : "Markdown",
      "content" : "## Project Description\r\n\r\n### Overview\r\n**Patient monitoring and control** is a software system which provides medical personnel with the means to (de)allocate patients and view patient's condition as well as the patient's history within a medical facility. All this functionality is provided to users (medical (support) personnel) via web/mobile applications.\r\n\r\nThe system integrates with and is dependent on existing physical devices (sensors) and other software systems of the medical facility. The system is a **read-only** application with the exception of device management done by the *medical support staff*, allocation of patients and prescribing drugs. Patient allocation and drug prescription is on a facility-department basis. This means that only *medical staff* from department A (further denoted as *authorized*) can modify data related to a patient situated in the department A. \r\n\r\n#### Definitions\r\n* from now on, these definitions will be used and *emphasized* wherever used\r\n\r\n**Medical staff/personnel** - a doctor or otherwise authorized person who is permitted to view and modify a treatment of a patient, belongs to a hospital department\r\n\r\n**(Medical) device** - a real-time physical device used to monitor physical properties of human body (internal processes, external phenomena, fluid analysis, ...)\r\n\r\n**Medical support staff/personnel** - a technician or otherwise authorized person who is permitted to attach and physically maintain *devices*  \r\n\r\n**Patient's condition** - a collection of the data from *devices* attached to a bed occupied by a *patient*\r\n\r\n**Patient's hospitalization history** - a collection of data spanning all the time periods the *patient* has been hospitalized in the current medical facility, includes *patient's condition* recordings, drug usage, TODO (add?)\r\n\r\n#### Constraints & Requirements\r\n* inaccessible from the Internet, local access only\r\n* authorize *medical (support) staff* and detect new *patients* using the data provided by external software systems\r\n* allow **authorized** *medical personnel* to \r\n  * allocate a patient to a particular bed\r\n  * prescribe medication which will be automatically fetched from existing drug system\r\n  * view patient's *current condition*\r\n  * view patient's drug prescriptions\r\n  * view *patient's hospitalization history*\r\n* provide automatic *patient history* persistence and store patient-related data (*condition*, allocation, drug usage) for patient's current hospitalization\r\n* manage communication with *devices*\r\n* allow *medical support staff* to\r\n  * manage *device* allocation to a bed\r\n  * react to *device* malfunction\r\n* manage drug allocation\r\n  * request a drug package from external software systems\r\n  * report depletion of a drug package to external software systems\r\n\r\n### Role of the PMC system within the hospital network\r\nIn addition to the requirements, the system also provides *medical support staff* with notifications about device malfunction.\r\nFollowing systems are expected to be operational and reachable within the hospital network:\r\n* Drug Monitoring - takes care of drug allocation & delivery\r\n* Patient Registry - a system providing simple information for all patients hospitalized\r\n* Authorization Server\r\n* Medical Devices - see definition of *(Medical) device*\r\nTODO (add?)\r\n\r\n![](embed:Level_1)\r\n\r\n### System Design\r\n\r\nBased on requirements, PMC software system consists of three main parts:\r\n- PMC Application\r\n- Devices Application\r\n- Drugs Usage Application\r\n\r\nMedical staff access the system via PMC Application, medical support staff manages devices via Devices Application -- users access the application via browser. Each application is designed following four-tier architecture. Structure of PMC Application is described in further details in section [PMC Core Application](#2.1), similarly Devices Application in [Devices Application](#2.2) and Drugs Usage application in [Drugs Application](#2.3). Following [Workflows section](#1.4) describes workflows in PMC software system from users and external systems perspective.\r\n\r\n![](embed:Level_2)\r\n\r\n### Workflows\r\n\r\nFollowing diagrams describes how PMC software system is utilized in workflows with medical users and external systems. It is assumed that users are already authenticated via OAuth Authorization server.\r\n\r\n#### Patient management\r\n\r\nFollowing diagram describes the process of new patient discovery. If *medical staff* wishes to see incoming patients without a bed assignment, they interact with the web application. The PMC server, which forms a proper list of desired patients, requests data about new patients from the Patient registry and filters out those, who do not have a bed assigned. Such list is then formatted and displayed by the frontend to be seen by medical staff.\r\n\r\n![](embed:SimplePatientDiscoveryWorkflow)\r\n\r\nFollowing diagram describes the workflow of assigning a patient to a bed. *Medical staff* interacts with the web application, assigning a patient to a bed. The PMC server saves this change and responds by signaling success or failure. The response is displayed as a notification or an announcement window (possibly describing an error in a non-technical way).\r\n\r\n![](embed:SimpleAddPatientWorkflow)\r\n\r\nFollowing diagram describes the workflow how the PMC system provides current *patient's condition* data. *Medical staff* requests patient condition data via the web application. The PMC system then requests the current data of the devices attached to the patient's bed. This data is interpreted and displayed to the user in the web application. \r\n\r\n![](embed:SimplePatientConditionCheckWorkflow)\r\n\r\n#### Drugs management\r\n\r\nThe following diagram describes how drugs are prescribed to a patient. *Medical staff* assigns new drugs to a patient using the web application. The *PMC server* relays this request to the *Drugs Application*, whose task is to store the data about prescriptions. If the drug is not available, the *Drugs Application* sends a request of a new delivery to the *Drug Monitoring* system.\r\n\r\n![](embed:SimpleDrugsManagementWorkflow)\r\n\r\n#### Devices management\r\n\r\nFollowing diagram describes regular workflow how PMC software system manages medical device data. Medical support staff register medical devices to hospital beds in Devices Application. PMC Application then sends periodical requests to Devices Application to fetch new devices data for each hospital bed.\r\n\r\n![](embed:SimpleDeviceAssignmentWorkflow)\r\n\r\nFollowing diagram describes workflow in case of device malfunction. In case of malfunction, medical support staff is notified via e-mail and Slack app notification. Medical support staff can view device malfunction details in Devices Application. Response to PMC Application then contains generic non-technical notification available to medical staff. \r\n\r\n![](embed:SimpleDeviceFailureWorkflow)\r\n"
    } ]
  },
  "views" : {
    "systemContextViews" : [ {
      "softwareSystemId" : "4",
      "key" : "Level_1",
      "paperSize" : "A3_Landscape",
      "dimensions" : {
        "width" : 3816,
        "height" : 2116
      },
      "enterpriseBoundaryVisible" : true,
      "elements" : [ {
        "id" : "33",
        "x" : 1658,
        "y" : 1557
      }, {
        "id" : "1",
        "x" : 1683,
        "y" : 207
      }, {
        "id" : "34",
        "x" : 2420,
        "y" : 1555
      }, {
        "id" : "2",
        "x" : 300,
        "y" : 865
      }, {
        "id" : "35",
        "x" : 2645,
        "y" : 910
      }, {
        "id" : "3",
        "x" : 2630,
        "y" : 365
      }, {
        "id" : "4",
        "x" : 1658,
        "y" : 907
      } ],
      "relationships" : [ {
        "id" : "37",
        "vertices" : [ {
          "x" : 1160,
          "y" : 1270
        } ]
      }, {
        "id" : "60"
      }, {
        "id" : "36"
      }, {
        "id" : "52",
        "vertices" : [ {
          "x" : 2033,
          "y" : 1382
        } ]
      }, {
        "id" : "41"
      }, {
        "id" : "43"
      }, {
        "id" : "38",
        "vertices" : [ {
          "x" : 1733,
          "y" : 1382
        } ]
      }, {
        "id" : "39"
      } ]
    } ],
    "containerViews" : [ {
      "softwareSystemId" : "4",
      "key" : "Level_2",
      "paperSize" : "A2_Landscape",
      "dimensions" : {
        "width" : 5595,
        "height" : 3475
      },
      "externalSoftwareSystemBoundariesVisible" : true,
      "elements" : [ {
        "id" : "22",
        "x" : 1876,
        "y" : 956
      }, {
        "id" : "33",
        "x" : 245,
        "y" : 1365
      }, {
        "id" : "23",
        "x" : 1880,
        "y" : 2025
      }, {
        "id" : "34",
        "x" : 1025,
        "y" : 370
      }, {
        "id" : "12",
        "x" : 3395,
        "y" : 975
      }, {
        "id" : "35",
        "x" : 2680,
        "y" : 340
      }, {
        "id" : "13",
        "x" : 3395,
        "y" : 2115
      }, {
        "id" : "25",
        "x" : 1075,
        "y" : 1365
      }, {
        "id" : "15",
        "x" : 1880,
        "y" : 1480
      }, {
        "id" : "1",
        "x" : 1905,
        "y" : 250
      }, {
        "id" : "2",
        "x" : 3400,
        "y" : 215
      }, {
        "id" : "3",
        "x" : 4340,
        "y" : 1465
      }, {
        "id" : "5",
        "x" : 3395,
        "y" : 1465
      }, {
        "id" : "31",
        "x" : 1075,
        "y" : 2015
      } ],
      "relationships" : [ {
        "id" : "50",
        "vertices" : [ {
          "x" : 900,
          "y" : 1660
        } ]
      }, {
        "id" : "40"
      }, {
        "id" : "51",
        "vertices" : [ {
          "x" : 885,
          "y" : 1400
        } ]
      }, {
        "id" : "42",
        "vertices" : [ {
          "x" : 4230,
          "y" : 955
        } ]
      }, {
        "id" : "53"
      }, {
        "id" : "54"
      }, {
        "id" : "44"
      }, {
        "id" : "55"
      }, {
        "id" : "56"
      }, {
        "id" : "45",
        "vertices" : [ {
          "x" : 3065,
          "y" : 1190
        } ]
      }, {
        "id" : "46"
      }, {
        "id" : "57"
      }, {
        "id" : "47",
        "vertices" : [ {
          "x" : 2680,
          "y" : 1190
        } ]
      }, {
        "id" : "58"
      }, {
        "id" : "59",
        "vertices" : [ {
          "x" : 1245,
          "y" : 1005
        } ]
      }, {
        "id" : "48",
        "vertices" : [ {
          "x" : 2880,
          "y" : 1795
        } ]
      }, {
        "id" : "49",
        "vertices" : [ {
          "x" : 2880,
          "y" : 1515
        } ]
      } ]
    } ],
    "componentViews" : [ {
      "key" : "Level_3_central",
      "paperSize" : "A3_Landscape",
      "dimensions" : {
        "width" : 4961,
        "height" : 3508
      },
      "containerId" : "15",
      "externalContainerBoundariesVisible" : true,
      "elements" : [ {
        "id" : "22",
        "x" : 1560,
        "y" : 170
      }, {
        "id" : "34",
        "x" : 3020,
        "y" : 475
      }, {
        "id" : "23",
        "x" : 2045,
        "y" : 2170
      }, {
        "id" : "35",
        "x" : 2160,
        "y" : -25
      }, {
        "id" : "25",
        "x" : 730,
        "y" : 1685
      }, {
        "id" : "16",
        "x" : 2345,
        "y" : 940
      }, {
        "id" : "17",
        "x" : 3025,
        "y" : 940
      }, {
        "id" : "18",
        "x" : 1805,
        "y" : 950
      }, {
        "id" : "19",
        "x" : 1245,
        "y" : 965
      }, {
        "id" : "5",
        "x" : 3730,
        "y" : 2080
      }, {
        "id" : "20",
        "x" : 3685,
        "y" : 945
      }, {
        "id" : "21",
        "x" : 2055,
        "y" : 1620
      } ],
      "relationships" : [ {
        "id" : "70"
      }, {
        "id" : "72"
      }, {
        "id" : "61"
      }, {
        "id" : "80",
        "vertices" : [ {
          "x" : 1785,
          "y" : 1530
        } ]
      }, {
        "id" : "81"
      }, {
        "id" : "74",
        "vertices" : [ {
          "x" : 1085,
          "y" : 115
        } ]
      }, {
        "id" : "63"
      }, {
        "id" : "62"
      }, {
        "id" : "73",
        "vertices" : [ {
          "x" : 3610,
          "y" : 320
        } ]
      }, {
        "id" : "76",
        "vertices" : [ {
          "x" : 2610,
          "y" : 645
        } ]
      }, {
        "id" : "64"
      }, {
        "id" : "75",
        "vertices" : [ {
          "x" : 3850,
          "y" : 125
        } ]
      }, {
        "id" : "78"
      }, {
        "id" : "77",
        "vertices" : [ {
          "x" : 2830,
          "y" : 610
        } ]
      }, {
        "id" : "66"
      }, {
        "id" : "69",
        "vertices" : [ {
          "x" : 2100,
          "y" : 1460
        } ]
      }, {
        "id" : "79"
      }, {
        "id" : "68"
      } ]
    }, {
      "key" : "Level_3_drugs",
      "paperSize" : "A4_Landscape",
      "dimensions" : {
        "width" : 3508,
        "height" : 2480
      },
      "containerId" : "25",
      "externalContainerBoundariesVisible" : true,
      "elements" : [ {
        "id" : "33",
        "x" : 310,
        "y" : 980
      }, {
        "id" : "26",
        "x" : 910,
        "y" : 1525
      }, {
        "id" : "15",
        "x" : 2990,
        "y" : 915
      }, {
        "id" : "27",
        "x" : 1215,
        "y" : 490
      }, {
        "id" : "28",
        "x" : 2175,
        "y" : 910
      }, {
        "id" : "29",
        "x" : 1235,
        "y" : 935
      }, {
        "id" : "30",
        "x" : 1715,
        "y" : 1535
      }, {
        "id" : "31",
        "x" : 1720,
        "y" : 2060
      } ],
      "relationships" : [ {
        "id" : "93"
      }, {
        "id" : "94"
      }, {
        "id" : "97"
      }, {
        "id" : "98"
      }, {
        "id" : "95"
      }, {
        "id" : "96"
      }, {
        "id" : "67"
      }, {
        "id" : "99"
      } ]
    }, {
      "key" : "Level_3_devices",
      "paperSize" : "A3_Landscape",
      "dimensions" : {
        "width" : 4961,
        "height" : 3508
      },
      "containerId" : "5",
      "externalContainerBoundariesVisible" : true,
      "elements" : [ {
        "id" : "11",
        "x" : 3280,
        "y" : 1270
      }, {
        "id" : "12",
        "x" : 1145,
        "y" : 125
      }, {
        "id" : "13",
        "x" : 2130,
        "y" : 2400
      }, {
        "id" : "2",
        "x" : 2630,
        "y" : 75
      }, {
        "id" : "3",
        "x" : 4140,
        "y" : 1275
      }, {
        "id" : "15",
        "x" : 400,
        "y" : 1300
      }, {
        "id" : "6",
        "x" : 1140,
        "y" : 1295
      }, {
        "id" : "7",
        "x" : 1875,
        "y" : 710
      }, {
        "id" : "8",
        "x" : 2085,
        "y" : 1280
      }, {
        "id" : "9",
        "x" : 2105,
        "y" : 1810
      }, {
        "id" : "10",
        "x" : 2615,
        "y" : 710
      } ],
      "relationships" : [ {
        "id" : "82"
      }, {
        "id" : "83"
      }, {
        "id" : "91"
      }, {
        "id" : "92"
      }, {
        "id" : "86"
      }, {
        "id" : "87"
      }, {
        "id" : "84"
      }, {
        "id" : "85"
      }, {
        "id" : "90"
      }, {
        "id" : "44"
      }, {
        "id" : "88"
      }, {
        "id" : "89"
      } ]
    } ],
    "dynamicViews" : [ {
      "description" : "Summarises how devices app is utilized with pmc application.",
      "key" : "SimpleDeviceAssignmentWorkflow",
      "paperSize" : "A4_Landscape",
      "dimensions" : {
        "width" : 3066,
        "height" : 2308
      },
      "elementId" : "4",
      "externalBoundariesVisible" : true,
      "relationships" : [ {
        "id" : "138",
        "description" : "Installs device to hospital bed",
        "order" : "1",
        "response" : false
      }, {
        "id" : "44",
        "description" : "Makes request to register device for hospital bed",
        "order" : "2",
        "response" : false
      }, {
        "id" : "57",
        "description" : "Registers device for hospital bed",
        "order" : "3",
        "response" : false
      }, {
        "id" : "46",
        "description" : "Wants to see medical data for patient",
        "order" : "4",
        "response" : false
      }, {
        "id" : "56",
        "description" : "Requests data for patient",
        "order" : "5",
        "response" : false,
        "vertices" : [ {
          "x" : 1040,
          "y" : 815
        } ]
      }, {
        "id" : "49",
        "description" : "Requests devices data for bed where patient is allocated",
        "order" : "6",
        "response" : false,
        "vertices" : [ {
          "x" : 1189,
          "y" : 1556
        } ]
      }, {
        "id" : "40",
        "description" : "Requests device data for each device on bed",
        "order" : "7",
        "response" : false,
        "vertices" : [ {
          "x" : 2136,
          "y" : 1357
        } ]
      }, {
        "id" : "40",
        "description" : "Returns device data",
        "order" : "8",
        "response" : true,
        "vertices" : [ {
          "x" : 2165,
          "y" : 1645
        } ]
      }, {
        "id" : "48",
        "description" : "Returns device data",
        "order" : "9",
        "response" : false,
        "vertices" : [ {
          "x" : 1455,
          "y" : 1475
        } ]
      }, {
        "id" : "56",
        "description" : "Returns device data",
        "order" : "10",
        "response" : true,
        "vertices" : [ {
          "x" : 1282,
          "y" : 807
        } ]
      }, {
        "id" : "46",
        "description" : "User can see medical data",
        "order" : "11",
        "response" : true,
        "vertices" : [ {
          "x" : 585,
          "y" : 580
        } ]
      } ],
      "elements" : [ {
        "id" : "22",
        "x" : 907,
        "y" : 307
      }, {
        "id" : "12",
        "x" : 1657,
        "y" : 1007
      }, {
        "id" : "1",
        "x" : 207,
        "y" : 957
      }, {
        "id" : "2",
        "x" : 2374,
        "y" : 257
      }, {
        "id" : "3",
        "x" : 2407,
        "y" : 1007
      }, {
        "id" : "15",
        "x" : 907,
        "y" : 1007
      }, {
        "id" : "5",
        "x" : 1282,
        "y" : 1657
      } ]
    }, {
      "description" : "Summarises how technical staff is informed about device malfunction.",
      "key" : "SimpleDeviceFailureWorkflow",
      "paperSize" : "A4_Portrait",
      "dimensions" : {
        "width" : 1858,
        "height" : 2154
      },
      "automaticLayout" : {
        "implementation" : "Graphviz",
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "nodeSeparation" : 300,
        "edgeSeparation" : 0,
        "vertices" : false
      },
      "elementId" : "4",
      "externalBoundariesVisible" : true,
      "relationships" : [ {
        "id" : "49",
        "description" : "Requests devices data for hospital bed",
        "order" : "1",
        "response" : false,
        "vertices" : [ {
          "x" : 1154,
          "y" : 779
        } ]
      }, {
        "id" : "40",
        "description" : "Requests device data",
        "order" : "2",
        "response" : false,
        "vertices" : [ {
          "x" : 1154,
          "y" : 1404
        } ]
      }, {
        "id" : "40",
        "description" : "Malfunction in device",
        "order" : "3",
        "response" : true,
        "vertices" : [ {
          "x" : 1454,
          "y" : 1404
        } ]
      }, {
        "id" : "48",
        "description" : "Returns generic non-technical error message",
        "order" : "4",
        "response" : false,
        "vertices" : [ {
          "x" : 1454,
          "y" : 779
        } ]
      }, {
        "id" : "42",
        "description" : "Sends notification",
        "order" : "5",
        "response" : false
      }, {
        "id" : "44",
        "description" : "Can review malfunction details",
        "order" : "6",
        "response" : false
      } ],
      "elements" : [ {
        "id" : "12",
        "x" : 329,
        "y" : 329
      }, {
        "id" : "2",
        "x" : 375,
        "y" : 1529
      }, {
        "id" : "3",
        "x" : 1079,
        "y" : 1579
      }, {
        "id" : "15",
        "x" : 1079,
        "y" : 329
      }, {
        "id" : "5",
        "x" : 1079,
        "y" : 929
      } ]
    }, {
      "description" : "Summarises how new and unassigned patients are discovered.",
      "key" : "PatientDiscoveryWorkflow",
      "paperSize" : "A4_Landscape",
      "dimensions" : {
        "width" : 2504,
        "height" : 2154
      },
      "elementId" : "15",
      "externalBoundariesVisible" : true,
      "relationships" : [ {
        "id" : "46",
        "description" : "Displays the unassigned-patient view / page",
        "order" : "1",
        "response" : false,
        "vertices" : [ {
          "x" : 2153,
          "y" : 1362
        } ]
      }, {
        "id" : "64",
        "description" : "Requests incoming unassigned patient list",
        "order" : "2",
        "response" : false,
        "vertices" : [ {
          "x" : 1860,
          "y" : 595
        } ]
      }, {
        "id" : "63",
        "description" : "Requests new-patient list",
        "order" : "3",
        "response" : false,
        "vertices" : [ {
          "x" : 730,
          "y" : 595
        } ]
      }, {
        "id" : "62",
        "description" : "Requests patient data to determine new patients",
        "order" : "4",
        "response" : false,
        "vertices" : [ {
          "x" : 353,
          "y" : 1362
        } ]
      }, {
        "id" : "62",
        "description" : "Returns patient data",
        "order" : "5",
        "response" : true,
        "vertices" : [ {
          "x" : 653,
          "y" : 1362
        } ]
      }, {
        "id" : "63",
        "description" : "Returns incoming patient list",
        "order" : "6",
        "response" : true
      }, {
        "id" : "61",
        "description" : "Filter unassigned patients using",
        "order" : "7",
        "response" : false,
        "vertices" : [ {
          "x" : 1103,
          "y" : 737
        } ]
      }, {
        "id" : "61",
        "description" : "Returns list of filtered unassigned patients",
        "order" : "8",
        "response" : true,
        "vertices" : [ {
          "x" : 1340,
          "y" : 765
        } ]
      }, {
        "id" : "64",
        "description" : "Returns list of incoming unassigned patients",
        "order" : "9",
        "response" : true
      }, {
        "id" : "46",
        "description" : "Displays unassigned patients",
        "order" : "10",
        "response" : true,
        "vertices" : [ {
          "x" : 1853,
          "y" : 1362
        } ]
      } ],
      "elements" : [ {
        "id" : "22",
        "x" : 1778,
        "y" : 887
      }, {
        "id" : "1",
        "x" : 1803,
        "y" : 1487
      }, {
        "id" : "34",
        "x" : 278,
        "y" : 1537
      }, {
        "id" : "16",
        "x" : 1028,
        "y" : 287
      }, {
        "id" : "17",
        "x" : 278,
        "y" : 887
      }, {
        "id" : "21",
        "x" : 1015,
        "y" : 930
      } ]
    }, {
      "description" : "Summarises how the assigning of patients works.",
      "key" : "AddPatientWorkflow",
      "paperSize" : "A4_Landscape",
      "dimensions" : {
        "width" : 2504,
        "height" : 1608
      },
      "elementId" : "15",
      "externalBoundariesVisible" : true,
      "relationships" : [ {
        "id" : "46",
        "description" : "Assigns an unassigned patient to a bed",
        "order" : "1",
        "response" : false
      }, {
        "id" : "64",
        "description" : "Requests the assignment of a patient to a bed",
        "order" : "2",
        "response" : false,
        "vertices" : [ {
          "x" : 1790,
          "y" : 590
        } ]
      }, {
        "id" : "61",
        "description" : "Validates & writes data using",
        "order" : "3",
        "response" : false,
        "vertices" : [ {
          "x" : 1154,
          "y" : 804
        } ]
      }, {
        "id" : "61",
        "description" : "Signals success / failure",
        "order" : "4",
        "response" : true,
        "vertices" : [ {
          "x" : 1454,
          "y" : 804
        } ]
      }, {
        "id" : "136",
        "description" : "If an old patient was overwritten, trigger patient history persistance for overwritten patient",
        "order" : "5",
        "response" : false
      }, {
        "id" : "64",
        "description" : "Signals success / failure",
        "order" : "6",
        "response" : true
      } ],
      "elements" : [ {
        "id" : "22",
        "x" : 1829,
        "y" : 979
      }, {
        "id" : "1",
        "x" : 1825,
        "y" : 55
      }, {
        "id" : "16",
        "x" : 1079,
        "y" : 329
      }, {
        "id" : "18",
        "x" : 329,
        "y" : 979
      }, {
        "id" : "21",
        "x" : 1079,
        "y" : 979
      } ]
    }, {
      "description" : "Summarises how the medical staff can access patient's current condition",
      "key" : "SimplePatientConditionCheckWorkflow",
      "paperSize" : "A4_Portrait",
      "dimensions" : {
        "width" : 1704,
        "height" : 2754
      },
      "elementId" : "4",
      "externalBoundariesVisible" : true,
      "relationships" : [ {
        "id" : "46",
        "description" : "Displays patient's condition view / page",
        "order" : "1",
        "response" : false
      }, {
        "id" : "56",
        "description" : "Requests patient's condition",
        "order" : "2",
        "response" : false,
        "vertices" : [ {
          "x" : 404,
          "y" : 804
        } ]
      }, {
        "id" : "49",
        "description" : "Requests sensor data related to patient's bed",
        "order" : "3",
        "response" : false,
        "vertices" : [ {
          "x" : 404,
          "y" : 1454
        } ]
      }, {
        "id" : "40",
        "description" : "Requests device data",
        "order" : "4",
        "response" : false,
        "vertices" : [ {
          "x" : 404,
          "y" : 2079
        } ]
      }, {
        "id" : "40",
        "description" : "Returns device data",
        "order" : "5",
        "response" : true,
        "vertices" : [ {
          "x" : 704,
          "y" : 2079
        } ]
      }, {
        "id" : "48",
        "description" : "Returns device data",
        "order" : "6",
        "response" : false,
        "vertices" : [ {
          "x" : 704,
          "y" : 1454
        } ]
      }, {
        "id" : "56",
        "description" : "Returns patient's condition",
        "order" : "7",
        "response" : true,
        "vertices" : [ {
          "x" : 704,
          "y" : 804
        } ]
      }, {
        "id" : "46",
        "description" : "Displays patietn's condition",
        "order" : "8",
        "response" : true,
        "vertices" : [ {
          "x" : 1100,
          "y" : 515
        } ]
      } ],
      "elements" : [ {
        "id" : "22",
        "x" : 329,
        "y" : 329
      }, {
        "id" : "1",
        "x" : 1195,
        "y" : 700
      }, {
        "id" : "3",
        "x" : 329,
        "y" : 2229
      }, {
        "id" : "15",
        "x" : 329,
        "y" : 979
      }, {
        "id" : "5",
        "x" : 329,
        "y" : 1629
      } ]
    }, {
      "description" : "Summarises how new and unassigned patients are discovered.",
      "key" : "SimplePatientDiscoveryWorkflow",
      "paperSize" : "A4_Portrait",
      "dimensions" : {
        "width" : 1108,
        "height" : 2616
      },
      "automaticLayout" : {
        "implementation" : "Graphviz",
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "nodeSeparation" : 300,
        "edgeSeparation" : 0,
        "vertices" : false
      },
      "elementId" : "4",
      "externalBoundariesVisible" : true,
      "relationships" : [ {
        "id" : "46",
        "description" : "Displays the unassigned-patient view / page",
        "order" : "1",
        "response" : false
      }, {
        "id" : "56",
        "description" : "Requests incoming unassigned patient list",
        "order" : "2",
        "response" : false,
        "vertices" : [ {
          "x" : 404,
          "y" : 1358
        } ]
      }, {
        "id" : "59",
        "description" : "Requests information to determine new patients",
        "order" : "3",
        "response" : false,
        "vertices" : [ {
          "x" : 404,
          "y" : 1958
        } ]
      }, {
        "id" : "59",
        "description" : "Responds with the required information",
        "order" : "4",
        "response" : true,
        "vertices" : [ {
          "x" : 704,
          "y" : 1958
        } ]
      }, {
        "id" : "56",
        "description" : "Returns list of incoming unassigned patients",
        "order" : "5",
        "response" : true,
        "vertices" : [ {
          "x" : 704,
          "y" : 1358
        } ]
      } ],
      "elements" : [ {
        "id" : "22",
        "x" : 329,
        "y" : 908
      }, {
        "id" : "1",
        "x" : 354,
        "y" : 208
      }, {
        "id" : "34",
        "x" : 329,
        "y" : 2108
      }, {
        "id" : "15",
        "x" : 329,
        "y" : 1508
      } ]
    }, {
      "description" : "Summarises how medical staff allocates drugs to a patient.",
      "key" : "DrugsManagementWorkflow",
      "paperSize" : "A3_Portrait",
      "dimensions" : {
        "width" : 1858,
        "height" : 4416
      },
      "elementId" : "25",
      "externalBoundariesVisible" : true,
      "relationships" : [ {
        "id" : "46",
        "description" : "Assigns a drug to a patient",
        "order" : "1",
        "response" : false
      }, {
        "id" : "70",
        "description" : "Requests the assignment of the drug to the patient",
        "order" : "2",
        "response" : false
      }, {
        "id" : "71",
        "description" : "Relays the request of the assignment of the drug to the patient",
        "order" : "3",
        "response" : false
      }, {
        "id" : "95",
        "description" : "Requests prescription of the drug to the patient",
        "order" : "4",
        "response" : false
      }, {
        "id" : "96",
        "description" : "Writes information about the prescription of the drug to the patient",
        "order" : "5",
        "response" : false,
        "vertices" : [ {
          "x" : 1149,
          "y" : 1873
        } ]
      }, {
        "id" : "96",
        "description" : "Checks the availability of the drug",
        "order" : "6",
        "response" : false,
        "vertices" : [ {
          "x" : 1449,
          "y" : 1873
        } ]
      }, {
        "id" : "98",
        "description" : "In case the drug is not available, requests delivery",
        "order" : "7",
        "response" : false
      }, {
        "id" : "99",
        "description" : "Requests delivery of the drug",
        "order" : "8",
        "response" : false
      } ],
      "elements" : [ {
        "id" : "22",
        "x" : 1095,
        "y" : 745
      }, {
        "id" : "33",
        "x" : 324,
        "y" : 2623
      }, {
        "id" : "1",
        "x" : 1120,
        "y" : 65
      }, {
        "id" : "26",
        "x" : 324,
        "y" : 2023
      }, {
        "id" : "28",
        "x" : 340,
        "y" : 1325
      }, {
        "id" : "29",
        "x" : 1074,
        "y" : 1423
      }, {
        "id" : "19",
        "x" : 315,
        "y" : 725
      }, {
        "id" : "30",
        "x" : 1074,
        "y" : 2023
      } ]
    }, {
      "description" : "Summarises how the medical staff can access patient's current condition",
      "key" : "PatientConditionCheckWorkflow",
      "paperSize" : "A4_Portrait",
      "dimensions" : {
        "width" : 2454,
        "height" : 3458
      },
      "elementId" : "15",
      "externalBoundariesVisible" : true,
      "relationships" : [ {
        "id" : "46",
        "description" : "Displays patient's condition view / page",
        "order" : "1",
        "response" : false
      }, {
        "id" : "73",
        "description" : "Requests patient's condition",
        "order" : "2",
        "response" : false
      }, {
        "id" : "79",
        "description" : "Requests patient's bed",
        "order" : "3",
        "response" : false,
        "vertices" : [ {
          "x" : 361,
          "y" : 2632
        } ]
      }, {
        "id" : "79",
        "description" : "Returns patient's bed",
        "order" : "4",
        "response" : true,
        "vertices" : [ {
          "x" : 661,
          "y" : 2632
        } ]
      }, {
        "id" : "137",
        "description" : "Requests sensor data related to patient's bed",
        "order" : "5",
        "response" : false,
        "vertices" : [ {
          "x" : 661,
          "y" : 2032
        } ]
      }, {
        "id" : "83",
        "description" : "Requests sensor data related to the bed",
        "order" : "6",
        "response" : false,
        "vertices" : [ {
          "x" : 661,
          "y" : 1407
        } ]
      }, {
        "id" : "85",
        "description" : "Request fresh device data using",
        "order" : "7",
        "response" : false,
        "vertices" : [ {
          "x" : 661,
          "y" : 757
        } ]
      }, {
        "id" : "87",
        "description" : "Fetches device data",
        "order" : "8",
        "response" : false,
        "vertices" : [ {
          "x" : 940,
          "y" : 660
        } ]
      }, {
        "id" : "87",
        "description" : "Returns device data",
        "order" : "9",
        "response" : true
      }, {
        "id" : "85",
        "description" : "Sends back sensor data",
        "order" : "10",
        "response" : true,
        "vertices" : [ {
          "x" : 361,
          "y" : 757
        } ]
      }, {
        "id" : "83",
        "description" : "Returns device data",
        "order" : "11",
        "response" : true,
        "vertices" : [ {
          "x" : 361,
          "y" : 1407
        } ]
      }, {
        "id" : "137",
        "description" : "Sends device data in response",
        "order" : "12",
        "response" : true,
        "vertices" : [ {
          "x" : 361,
          "y" : 2032
        } ]
      }, {
        "id" : "73",
        "description" : "Sends current patient condition data",
        "order" : "13",
        "response" : true,
        "vertices" : [ {
          "x" : 1165,
          "y" : 2315
        } ]
      } ],
      "elements" : [ {
        "id" : "22",
        "x" : 1155,
        "y" : 1800
      }, {
        "id" : "11",
        "x" : 286,
        "y" : 282
      }, {
        "id" : "1",
        "x" : 1185,
        "y" : 1140
      }, {
        "id" : "3",
        "x" : 1115,
        "y" : 280
      }, {
        "id" : "6",
        "x" : 286,
        "y" : 1582
      }, {
        "id" : "8",
        "x" : 286,
        "y" : 932
      }, {
        "id" : "20",
        "x" : 286,
        "y" : 2182
      }, {
        "id" : "21",
        "x" : 286,
        "y" : 2782
      } ]
    }, {
      "description" : "Summarises how technical staff is informed about device malfunction.",
      "key" : "DeviceFailureWorkflow",
      "paperSize" : "A4_Portrait",
      "dimensions" : {
        "width" : 1858,
        "height" : 3354
      },
      "automaticLayout" : {
        "implementation" : "Graphviz",
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "nodeSeparation" : 300,
        "edgeSeparation" : 0,
        "vertices" : false
      },
      "elementId" : "5",
      "externalBoundariesVisible" : true,
      "relationships" : [ {
        "id" : "85",
        "description" : "Requests data from a device",
        "order" : "1",
        "response" : false,
        "vertices" : [ {
          "x" : 1078,
          "y" : 736
        } ]
      }, {
        "id" : "85",
        "description" : "Returns invalid data",
        "order" : "2",
        "response" : true,
        "vertices" : [ {
          "x" : 778,
          "y" : 736
        } ]
      }, {
        "id" : "86",
        "description" : "Requests to notify users of the failure",
        "order" : "3",
        "response" : false
      }, {
        "id" : "84",
        "description" : "Stores failure details",
        "order" : "4",
        "response" : false
      }, {
        "id" : "92",
        "description" : "Notifies of the failure",
        "order" : "5",
        "response" : false
      }, {
        "id" : "44",
        "description" : "Reviews failure details for diagnostics",
        "order" : "6",
        "response" : false
      } ],
      "elements" : [ {
        "id" : "11",
        "x" : 703,
        "y" : 286
      }, {
        "id" : "12",
        "x" : 1078,
        "y" : 2786
      }, {
        "id" : "2",
        "x" : 1103,
        "y" : 2086
      }, {
        "id" : "8",
        "x" : 703,
        "y" : 886
      }, {
        "id" : "9",
        "x" : 328,
        "y" : 1486
      }, {
        "id" : "10",
        "x" : 1078,
        "y" : 1486
      } ]
    }, {
      "description" : "Summarises how medical staff allocates drugs to a patient.",
      "key" : "SimpleDrugsManagementWorkflow",
      "paperSize" : "A4_Portrait",
      "dimensions" : {
        "width" : 1108,
        "height" : 3216
      },
      "automaticLayout" : {
        "implementation" : "Graphviz",
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "nodeSeparation" : 300,
        "edgeSeparation" : 0,
        "vertices" : false
      },
      "elementId" : "4",
      "externalBoundariesVisible" : true,
      "relationships" : [ {
        "id" : "46",
        "description" : "Assigns a drug to a patient",
        "order" : "1",
        "response" : false
      }, {
        "id" : "56",
        "description" : "Requests the assignment of the drug to the patient",
        "order" : "2",
        "response" : false
      }, {
        "id" : "58",
        "description" : "Relays the request of the assignment of the drug to the patient",
        "order" : "3",
        "response" : false
      }, {
        "id" : "50",
        "description" : "In case the drug is not available, requests delivery",
        "order" : "4",
        "response" : false
      } ],
      "elements" : [ {
        "id" : "22",
        "x" : 329,
        "y" : 908
      }, {
        "id" : "33",
        "x" : 329,
        "y" : 2708
      }, {
        "id" : "1",
        "x" : 354,
        "y" : 208
      }, {
        "id" : "25",
        "x" : 329,
        "y" : 2108
      }, {
        "id" : "15",
        "x" : 329,
        "y" : 1508
      } ]
    }, {
      "description" : "Summarises how the assigning of patients works.",
      "key" : "SimpleAddPatientWorkflow",
      "paperSize" : "A5_Landscape",
      "dimensions" : {
        "width" : 1704,
        "height" : 1608
      },
      "elementId" : "4",
      "externalBoundariesVisible" : true,
      "relationships" : [ {
        "id" : "46",
        "description" : "Assigns an unassigned patient to a bed",
        "order" : "1",
        "response" : false,
        "vertices" : [ {
          "x" : 1005,
          "y" : 515
        } ]
      }, {
        "id" : "56",
        "description" : "Requests the assignment of a patient to a bed",
        "order" : "2",
        "response" : false,
        "vertices" : [ {
          "x" : 361,
          "y" : 767
        } ]
      }, {
        "id" : "56",
        "description" : "Signals success/failure",
        "order" : "3",
        "response" : true,
        "vertices" : [ {
          "x" : 661,
          "y" : 767
        } ]
      }, {
        "id" : "46",
        "description" : "Signals success/failure",
        "order" : "4",
        "response" : true
      } ],
      "elements" : [ {
        "id" : "22",
        "x" : 286,
        "y" : 292
      }, {
        "id" : "1",
        "x" : 1045,
        "y" : 710
      }, {
        "id" : "15",
        "x" : 286,
        "y" : 942
      } ]
    } ],
    "deploymentViews" : [ {
      "softwareSystemId" : "4",
      "key" : "Prod",
      "paperSize" : "A2_Portrait",
      "dimensions" : {
        "width" : 3925,
        "height" : 5283
      },
      "environment" : "Production",
      "elements" : [ {
        "id" : "130",
        "x" : 175,
        "y" : 175
      }, {
        "id" : "131",
        "x" : 175,
        "y" : 175
      }, {
        "id" : "132",
        "x" : 3275,
        "y" : 2155
      }, {
        "id" : "110",
        "x" : 1555,
        "y" : 1090
      }, {
        "id" : "133",
        "x" : 2785,
        "y" : 2160
      }, {
        "id" : "134",
        "x" : 2290,
        "y" : 2165
      }, {
        "id" : "112",
        "x" : 175,
        "y" : 175
      }, {
        "id" : "113",
        "x" : 175,
        "y" : 175
      }, {
        "id" : "114",
        "x" : 2640,
        "y" : 1110
      }, {
        "id" : "118",
        "x" : 175,
        "y" : 175
      }, {
        "id" : "119",
        "x" : 175,
        "y" : 175
      }, {
        "id" : "120",
        "x" : 570,
        "y" : 1085
      }, {
        "id" : "100",
        "x" : 175,
        "y" : 175
      }, {
        "id" : "122",
        "x" : 175,
        "y" : 175
      }, {
        "id" : "101",
        "x" : 175,
        "y" : 175
      }, {
        "id" : "123",
        "x" : 175,
        "y" : 175
      }, {
        "id" : "102",
        "x" : 2705,
        "y" : 325
      }, {
        "id" : "124",
        "x" : 1445,
        "y" : 2170
      }, {
        "id" : "103",
        "x" : 175,
        "y" : 175
      }, {
        "id" : "104",
        "x" : 175,
        "y" : 175
      }, {
        "id" : "126",
        "x" : 205,
        "y" : 2160
      }, {
        "id" : "105",
        "x" : 1590,
        "y" : 270
      }, {
        "id" : "128",
        "x" : 815,
        "y" : 2170
      }, {
        "id" : "106",
        "x" : 175,
        "y" : 175
      }, {
        "id" : "107",
        "x" : 175,
        "y" : 175
      }, {
        "id" : "108",
        "x" : 175,
        "y" : 175
      }, {
        "id" : "109",
        "x" : 175,
        "y" : 175
      } ],
      "relationships" : [ {
        "id" : "129"
      }, {
        "id" : "111"
      }, {
        "id" : "135"
      }, {
        "id" : "121"
      }, {
        "id" : "115"
      }, {
        "id" : "127"
      }, {
        "id" : "125"
      }, {
        "id" : "117",
        "vertices" : [ {
          "x" : 2290,
          "y" : 1140
        } ]
      }, {
        "id" : "116",
        "vertices" : [ {
          "x" : 2315,
          "y" : 1500
        } ]
      } ]
    } ],
    "configuration" : {
      "branding" : { },
      "styles" : {
        "elements" : [ {
          "tag" : "webApp",
          "shape" : "WebBrowser"
        }, {
          "tag" : "mobileApp",
          "shape" : "MobileDevicePortrait"
        }, {
          "tag" : "Failover",
          "opacity" : 25
        } ]
      },
      "themes" : [ "https://static.structurizr.com/themes/default/theme.json" ],
      "terminology" : { },
      "lastSavedView" : "Prod"
    }
  }
}